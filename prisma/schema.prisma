generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model business_organization {
  id                 String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name               String               @db.VarChar(255)
  user_id            String               @db.Uuid
  created_at         DateTime             @default(now()) @db.Timestamp(6)
  updated_at         DateTime             @default(now()) @db.Timestamp(6)
  user               user                 @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  expense            expense[]
  financial_forecast financial_forecast[]
  financial_report   financial_report[]
}

model employee_expense {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  employee_id String   @db.Uuid
  expense_id  String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user        user     @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  expense     expense  @relation(fields: [expense_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model expense {
  id                       String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  category                 String                @db.VarChar(255)
  amount                   Int
  description              String?               @db.VarChar(255)
  date                     DateTime              @db.Date
  user_id                  String                @db.Uuid
  business_organization_id String                @db.Uuid
  created_at               DateTime              @default(now()) @db.Timestamp(6)
  updated_at               DateTime              @default(now()) @db.Timestamp(6)
  employee_expense         employee_expense[]
  business_organization    business_organization @relation(fields: [business_organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                     user                  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model financial_forecast {
  id                       String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  forecast_type            String                @db.VarChar(255)
  start_date               DateTime              @db.Date
  end_date                 DateTime              @db.Date
  user_id                  String                @db.Uuid
  business_organization_id String                @db.Uuid
  created_at               DateTime              @default(now()) @db.Timestamp(6)
  updated_at               DateTime              @default(now()) @db.Timestamp(6)
  business_organization    business_organization @relation(fields: [business_organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                     user                  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model financial_report {
  id                       String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  report_type              String                @db.VarChar(255)
  start_date               DateTime              @db.Date
  end_date                 DateTime              @db.Date
  user_id                  String                @db.Uuid
  business_organization_id String                @db.Uuid
  created_at               DateTime              @default(now()) @db.Timestamp(6)
  updated_at               DateTime              @default(now()) @db.Timestamp(6)
  business_organization    business_organization @relation(fields: [business_organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                     user                  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                    String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                 String                  @unique @db.VarChar(255)
  firstName             String?                 @db.VarChar(255)
  lastName              String?                 @db.VarChar(255)
  roq_user_id           String                  @db.VarChar(255)
  tenant_id             String                  @db.VarChar(255)
  business_organization business_organization[]
  employee_expense      employee_expense[]
  expense               expense[]
  financial_forecast    financial_forecast[]
  financial_report      financial_report[]
}
